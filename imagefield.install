<?php
// $Id$

/**
 * Implementation of hook_install().
 */

function imagefield_install() {
  content_notify('install', 'imagefield');
}

function imagefield_uninstall() {
  content_notify('uninstall', 'imagefield');
}

function imagefield_enable() {
  content_notify('enable', 'imagefield');
}

function imagefield_disable() {
  content_notify('disable', 'imagefield');
}

/**
 * Data is now stored in per-field tables.
 */
function imagefield_update_1() {
  $ret = array();
  
  include_once(drupal_get_path('module', 'content') .'/content.module');
  include_once(drupal_get_path('module', 'content') .'/content_admin.inc');

  

  $fields = content_fields();

  foreach ($fields as $field) {
    switch ($field['type']) {
      case 'file':
        $columns = array(
          'list' => array('type' => 'int', 'not null' => TRUE, 'default' => '0'),
        );
        content_alter_db_field(array(), array(), $field, $columns);
        break;
    }
  }
  db_query('DELETE FROM {cache}');
  return $ret;
}





/**
 * Schema change to enable alt and title tags.
 */

function imagefield_update_2() {
  $ret = array();

  include_once(drupal_get_path('module', 'content') .'/content.module');
  include_once(drupal_get_path('module', 'content') .'/content_admin.inc');

  $fields = content_fields();

  foreach ($fields as $field) {
    switch ($field['type']) {
      case 'image':
        $oldcolumns = array(
          'fid' => array('type' => 'int', 'not null' => TRUE, 'default' => '0'),
        );
        $newcolumns = array(
          'fid' => array('type' => 'int', 'not null' => TRUE, 'default' => '0'),
          'title' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => "''", 'sortable' => TRUE),
          'alt' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => "''", 'sortable' => TRUE),
        );
        content_alter_db_field($field, $oldcolumns, $field, $newcolumns);
        break;
    }
    drupal_set_message('altered: <br /><pre>'. print_r($field, true) .'</pre>');
  }

  db_query('DELETE FROM {cache}');
  return $ret;
}



/**
 * Upgrade to CCK 2 and Drupal 6.
 * @todo: update widget type from 'image' to 'imagefield_widget_default'
 * @todo: update formatter name changes.
 *    default => image_plain
 *    imagefield_nodelink => image_nodelink
 *    imagefield_imagelink => image_imagelink
 *    imagefield_path => path_plain
 *    imagefield_url => url_plain 
 */
function imagefield_update_6100() {
  include_once('./'. drupal_get_path('module', 'content') .'/content_crud.inc');

  $fields = content_fields();
  foreach ($fields as $field) {
    // skip non imagefields.
    if ($field['type'] != 'image') continue;

    // Convert max_number_images to CCK's multiple limit.
    if (isset($field['widget']['max_number_images'])) {
      if ($field['widget']['max_number_images'] == 0) {
        $field['multiple'] = 1; // 1 means "Unlimited" in CCK.
      }
      elseif ($field['widget']['max_number_images'] == 1) {
        $field['multiple'] = 0; // 0 means "Not Multiple" in CCK.
      }
      else {
        $field['multiple'] == $field['widget']['max_number_images'];
      }
      $field = array_merge($field, $field['widget']);
    }

    // update widget names.
    if ($field['widget']['type'] == 'image') $field['widget']['type'] = 'imagefield_widget_default';

    // update formatter names.
    $display_settings = array('teaser','full','4');
    foreach ($display_settings as $context) {
      switch($field['display_settings'][$context]['formatter']) {
        case 'default':  
          $field['display_settings'][$context]['formatter'] = 'image_plain';
          break;
        case 'imagefield_nodelink': 
          $field['display_settings'][$context]['formatter'] = 'image_nodelink'; 
          break;
        case 'imagefield_imagelink': 
          $field['display_settings'][$context]['formatter'] = 'image_imagelink'; 
          break;
        case 'imagefield_path': 
          $field['display_settings'][$context]['formatter'] = 'path_plain';
          break;
        case 'imagefield_url': 
          $field['display_settings'][$context]['formatter'] = 'url_plain';
          break;
      }
    }
     
    content_field_instance_update($field);
  }

  return array();
}

function imagefield_update_6101() {
 include_once(drupal_get_path('module','content') .'/includes/content.admin.inc');

  $fields = content_fields();
  foreach($fields as $field) {
    $new_field = $field;
    $new_field['columns']['data'] = array('type' => 'text');
    content_db_alter($field, $new_field);
  }
}
